{
	"DEFAULT_GOAL": {
		"prefix": "default",
		"body": ".DEFAULT_GOAL = $1",
		"description": "Set the default make target"
	},
	"colors": {
		"prefix": "colors",
		"body": [
			"# Usage example: echo '$(RED)RED TEXT$(RESET)'",
			"RED    := \\033[1;31m",
			"GREEN  := \\033[1;32m",
			"YELLOW := \\033[1;33m",
			"BLUE   := \\033[1;34m",
			"RESET  := \\033[0m"
		],
		"description": "The hex codes for colours"
	},
	"help": {
		"prefix": "help",
		"body": [
			"MAKEFILE_PATH := $(realpath $(lastword $(MAKEFILE_LIST)))",
			"help:  # Get help",
			"\t@echo \"Use: $(YELLOW)make [TARGET]$(RESET)\"",
			"\t@sed -n \"s/^\\([a-zA-Z]*\\):  # \\(.*\\)$$/\\1\\t\\2/p\" $(MAKEFILE_PATH) | \\",
			"\t\tawk -F \"\\t\" \\",
			"\t\t'{ print \\",
			"\t\t\t\"\\t\" \\",
			"\t\t\t\"$(BLUE)\" $\\$1 \"$(RESET)\" \\",
			"\t\t\t\"\\t\\t\" \\",
			"\t\t\t$\\$2 \\",
			"\t\t}'"
		],
		"description": "Generate help text for Makefile"
	},
	"boilerplate": {
		"prefix": "boilerplate",
		"body": [
			".DEFAULT_GOAL = help",
			"",
			"# Usage example: echo '$(RED)RED TEXT$(RESET)'",
			"RED    := \\033[1;31m",
			"GREEN  := \\033[1;32m",
			"YELLOW := \\033[1;33m",
			"BLUE   := \\033[1;34m",
			"RESET  := \\033[0m",
			"",
			"# Usage example:",
			"# @$(call announce_step_interactive, \"Connect to ssh session\", { \\",
			"#     ssh root@127.0.0.1:5432; \\",
			"# })",
			"define announce_interactive_step",
			"\t@{ \\",
			"\t\t\\$2; \\",
			"\t\tres=$$(echo $\\$?); \\",
			"\t\tif [ $\\$res -eq 0 ]; then \\",
			"\t\t\techo \"$(GREEN)>>>\\$1$(RESET)\"; \\",
			"\t\telse \\",
			"\t\t\techo \"$(RED)($\\$res) >>>\\$1$(RESET)\"; \\",
			"\t\tfi; \\",
			"\t\techo; \\",
			"\t}",
			"endef",
			"",
			"# Usage example:",
			"# @$(call announce_step, \"Saying hi!\", { \\",
			"#     echo \"hi\"; \\",
			"# })",
			"define announce_step",
			"\t@{ \\",
			"\t\toutput=$$(\\$2 2>&1); \\",
			"\t\tres=$$(echo $\\$?); \\",
			"\t\tif [ $\\$res -eq 0 ]; then \\",
			"\t\t\techo \"$(GREEN)>>>\\$1$(RESET)\"; \\",
			"\t\telse \\",
			"\t\t\techo \"$(RED)($\\$res) >>>\\$1$(RESET)\"; \\",
			"\t\tfi; \\",
			"\t\techo $\\$output; \\",
			"\t\techo; \\",
			"\t}",
			"endef",
			"",
			"test:  # This comment will automatically be shown in the help text",
			"\t@$(call announce_interactive_step, \"Bash\", bash)",
			"\t@$(call announce_step, \"Good\", { \\",
			"\t\techo hi; \\",
			"\t})",
			"\t@$(call announce_step, \"Bad\", { \\",
			"\t\thi; \\",
			"\t})",
			"",
			"MAKEFILE_PATH := $(realpath $(lastword $(MAKEFILE_LIST)))",
			"help:  # Get help",
			"\t@echo \"Use: $(YELLOW)make [TARGET]$(RESET)\"",
			"\t@sed -n \"s/^\\([a-zA-Z]*\\):  # \\(.*\\)$$/\\1\\t\\2/p\" $(MAKEFILE_PATH) | \\",
			"\t\tawk -F \"\\t\" \\",
			"\t\t'{ print \\",
			"\t\t\t\"\\t\" \\",
			"\t\t\t\"$(BLUE)\" $\\$1 \"$(RESET)\" \\",
			"\t\t\t\"\\t\\t\" \\",
			"\t\t\t$\\$2 \\",
			"\t\t}'"
		],
		"description": "Create a boilerplate makefile setup"
	},
	"announce step": {
		"prefix": "announce",
		"body": "@$(call announce_step, \"$1\", $2)",
		"description": "Call the announce_step function"
	},
	"announce interactive step": {
		"prefix": "announceinteractive",
		"body": "@$(call announce_interactive_step, \"$1\", $2)",
		"description": "Call the announce_step function"
	}
}
